{"ast":null,"code":"var _jsxFileName = \"C:\\\\DEV\\\\nomadcoders\\\\react-movie-webservice\\\\src\\\\routes\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport styles from \"/css/routes/Home.module.css\";\n\n/*\r\nMovie 컴포넌트는 medium_cover_image, title, summary, genres\r\n-> 이 props를 모두 부모 컴포넌트로부터 받아옴\r\n\r\ncoverImg={movie.medium_cover_image}\r\n자바스크립트에서는 medium_cover_image가 아닌mediumCoverImage로 쓰지만\r\n내가 만든 컴포넌트라 아무렇게 써도 됨.\r\n그러나 movie.medium_cover_image 에서는 API에서 가져오므로 API 정보와 똑같이 써야함\r\n이미지 element들을 alt속성을 가짐 -> alt={title}\r\n\r\n\r\nhome 라우트(페이지)는 모든 영화를 보여주고\r\nMovie 라우트는 영화 하나만 보여줌\r\n이렇게 라우트 별로 생각해야함\r\nhome 라우트는 기본적으로 App 컴포넌트 전체를 가지고 있게 만듦\r\n\r\nApp에 있는 것을 모두 Home라우트로 옮겼으니\r\nApp.js는 라우터를 렌더한다.\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await (await fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year`)).json();\n    //const json = await response.json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    /*fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year`)\r\n        .then((response) => response.json())\r\n        .then((json) => setMovies(json.data.movies);\r\n        setLoading(false));*/\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        id: movie.id,\n        coverImg: movie.medium_cover_image,\n        title: movie.title,\n        summary: movie.summary,\n        genres: movie.genres\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","Movie","styles","jsxDEV","_jsxDEV","Home","_s","loading","setLoading","movies","setMovies","getMovies","json","fetch","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","id","coverImg","medium_cover_image","title","summary","genres","_c","$RefreshReg$"],"sources":["C:/DEV/nomadcoders/react-movie-webservice/src/routes/Home.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Movie from \"../components/Movie\";\r\nimport styles from \"/css/routes/Home.module.css\";\r\n\r\n/*\r\nMovie 컴포넌트는 medium_cover_image, title, summary, genres\r\n-> 이 props를 모두 부모 컴포넌트로부터 받아옴\r\n\r\ncoverImg={movie.medium_cover_image}\r\n자바스크립트에서는 medium_cover_image가 아닌mediumCoverImage로 쓰지만\r\n내가 만든 컴포넌트라 아무렇게 써도 됨.\r\n그러나 movie.medium_cover_image 에서는 API에서 가져오므로 API 정보와 똑같이 써야함\r\n이미지 element들을 alt속성을 가짐 -> alt={title}\r\n\r\n\r\nhome 라우트(페이지)는 모든 영화를 보여주고\r\nMovie 라우트는 영화 하나만 보여줌\r\n이렇게 라우트 별로 생각해야함\r\nhome 라우트는 기본적으로 App 컴포넌트 전체를 가지고 있게 만듦\r\n\r\nApp에 있는 것을 모두 Home라우트로 옮겼으니\r\nApp.js는 라우터를 렌더한다.\r\n*/\r\nfunction Home() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [movies, setMovies] = useState([]);\r\n    const getMovies = async () => {\r\n        const json = await (await fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year`)).json();\r\n        //const json = await response.json();\r\n        setMovies(json.data.movies);\r\n        setLoading(false);\r\n    };\r\n    useEffect(() => {\r\n        /*fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year`)\r\n            .then((response) => response.json())\r\n            .then((json) => setMovies(json.data.movies);\r\n            setLoading(false));*/\r\n        getMovies();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <h1>Loading...</h1>\r\n            ) : (\r\n                <div>\r\n                    {movies.map((movie) => (\r\n                        <Movie\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            coverImg={movie.medium_cover_image}\r\n                            title={movie.title}\r\n                            summary={movie.summary}\r\n                            genres={movie.genres}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default Home;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,6BAA6B;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA,SAAAC,MAAA,IAAAC,OAAA;AAmBA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAAE,sEAAqE,CAAC,EAAED,IAAI,CAAC,CAAC;IAC/G;IACAF,SAAS,CAACE,IAAI,CAACE,IAAI,CAACL,MAAM,CAAC;IAC3BD,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EACDT,SAAS,CAAC,MAAM;IACZ;AACR;AACA;AACA;IACQY,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAW,QAAA,EACKR,OAAO,gBACJH,OAAA;MAAAW,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEnBf,OAAA;MAAAW,QAAA,EACKN,MAAM,CAACW,GAAG,CAAEC,KAAK,iBACdjB,OAAA,CAACH,KAAK;QAEFqB,EAAE,EAAED,KAAK,CAACC,EAAG;QACbC,QAAQ,EAAEF,KAAK,CAACG,kBAAmB;QACnCC,KAAK,EAAEJ,KAAK,CAACI,KAAM;QACnBC,OAAO,EAAEL,KAAK,CAACK,OAAQ;QACvBC,MAAM,EAAEN,KAAK,CAACM;MAAO,GALhBN,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMhB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACb,EAAA,CArCQD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAsCb,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}